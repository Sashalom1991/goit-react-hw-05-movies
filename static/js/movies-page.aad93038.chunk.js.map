{"version":3,"sources":["service/apiMovies.js","views/MoviesPage.jsx"],"names":["BASE_URL","KEY","ListPopularMoviesToday","a","axios","get","response","data","results","console","error","SearchMovies","searchName","InfoOfMovie","movieId","SearchActhorsMovies","cast","MoviesReviews","MoviesPage","url","useRouteMatch","history","useHistory","location","useLocation","useState","setSearchName","movies","setMovies","useEffect","apiFilms","then","res","log","className","onSubmit","e","preventDefault","trim","push","search","toast","info","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","map","movie","to","id","title"],"mappings":"iWAEMA,EAAW,+BACXC,EAAM,mCAWL,SAAeC,IAAtB,+B,4CAAO,4BAAAC,EAAA,+EAEoBC,IAAMC,IAAN,UAClBL,EADkB,uCACqBC,IAHzC,cAEGK,EAFH,yBAKIA,EAASC,KAAKC,SALlB,gCAOHC,QAAQC,MAAR,MAPG,0D,sBAWA,SAAeC,EAAtB,kC,4CAAO,WAA4BC,GAA5B,eAAAT,EAAA,+EAEoBC,IAAMC,IAAN,UAClBL,EADkB,iCACeC,EADf,kBAC4BW,EAD5B,+CAFpB,cAEGN,EAFH,yBAKIA,EAASC,KAAKC,SALlB,gCAOHC,QAAQC,MAAR,MAPG,0D,sBAYA,SAAeG,EAAtB,kC,4CAAO,WAA2BC,GAA3B,eAAAX,EAAA,+EAEoBC,IAAMC,IAAN,UAClBL,EADkB,kBACAc,EADA,oBACmBb,EADnB,oBAFpB,cAEGK,EAFH,yBAKIA,EAASC,MALb,gCAOHE,QAAQC,MAAR,MAPG,0D,sBAWA,SAAeK,EAAtB,kC,4CAAO,WAAmCD,GAAnC,eAAAX,EAAA,+EAEoBC,IAAMC,IAAN,UAClBL,EADkB,kBACAc,EADA,4BAC2Bb,EAD3B,oBAFpB,cAEGK,EAFH,yBAKIA,EAASC,KAAKS,MALlB,gCAOHP,QAAQC,MAAR,MAPG,0D,sBAWA,SAAeO,EAAtB,kC,4CAAO,WAA6BH,GAA7B,eAAAX,EAAA,+EAEoBC,IAAMC,IAAN,UAClBL,EADkB,kBACAc,EADA,4BAC2Bb,EAD3B,oBAFpB,cAEGK,EAFH,yBAKIA,EAASC,KAAKC,SALlB,gCAQHC,QAAQC,MAAR,MARG,0D,gLCpDQ,SAASQ,IACtB,IAAQC,EAAQC,cAARD,IACFE,EAAUC,cACVC,EAAWC,cAEjB,EAAoCC,mBAAS,IAA7C,mBAAOb,EAAP,KAAmBc,EAAnB,KACA,EAA4BD,mBAAS,IAArC,mBAAOE,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACW,KAAfjB,IAGJkB,IAAsBlB,GAAYmB,MAAK,SAAAC,GACrCvB,QAAQwB,IAAID,GACZJ,EAAUI,MAEZpB,EAAW,OACV,IAmBH,OACE,qCACE,uBAAMsB,UAAU,aAAaC,SAfZ,SAAAC,GACnBA,EAAEC,iBACwB,KAAtBzB,EAAW0B,QAIfR,IAAsBlB,GAAYmB,MAAK,SAAAC,GAAG,OAAIJ,EAAUI,MACxDN,EAAc,IAEdL,EAAQkB,KAAR,2BAAiBhB,GAAjB,IACEiB,OAAO,SAAD,OAAW5B,OAPjB6B,IAAMC,KAAK,iBAYX,UACE,uBACEC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,MAAOnC,EACPoC,SA1BiB,SAAAZ,GACvB,OAAOV,EAAcU,EAAEa,cAAcF,UA2BjC,wBAAQJ,KAAK,SAAST,UAAU,MAAhC,SACE,4DAGJ,oBAAIA,UAAU,OAAd,SACGP,GACCA,EAAOuB,KAAI,SAAAC,GACT,OACE,6BACE,cAAC,IAAD,CAAMC,GAAE,UAAKjC,EAAL,YAAYgC,EAAME,IAA1B,SAAiCF,EAAMG,SADhCH,EAAME","file":"static/js/movies-page.aad93038.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\nconst KEY = '419631da3183c09322b112e93ebb554b';\r\n\r\n// async function fetchDefaultApiMovies(url = '') {\r\n//   try {\r\n//     const response = await axios.get(url);\r\n//     console.log(response);\r\n//   } catch (error) {\r\n//     console.error(error);\r\n//   }\r\n// }\r\n\r\nexport async function ListPopularMoviesToday() {\r\n  try {\r\n    const response = await axios.get(\r\n      `${BASE_URL}/trending/movie/day?api_key=${KEY}`\r\n    );\r\n    return response.data.results;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nexport async function SearchMovies(searchName) {\r\n  try {\r\n    const response = await axios.get(\r\n      `${BASE_URL}/search/movie?api_key=${KEY}&query=${searchName}&language=en-US&page=1&include_adult=false`,\r\n    );\r\n    return response.data.results;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n\r\n}\r\n\r\nexport async function InfoOfMovie(movieId) {\r\n  try {\r\n    const response = await axios.get(\r\n      `${BASE_URL}/movie/${movieId}?api_key=${KEY}&language=en-US`,\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nexport async function SearchActhorsMovies(movieId) {\r\n  try {\r\n    const response = await axios.get(\r\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}&language=en-US`,\r\n    );\r\n    return response.data.cast;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nexport async function MoviesReviews(movieId) {\r\n  try {\r\n    const response = await axios.get(\r\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`,\r\n    );\r\n    return response.data.results;\r\n    \r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { Link, useRouteMatch, useLocation, useHistory } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport * as apiFilms from '../service/apiMovies';\r\n\r\nexport default function MoviesPage() {\r\n  const { url } = useRouteMatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const [searchName, setSearchName] = useState('');\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (searchName === '') {\r\n      return;\r\n    }\r\n    apiFilms.SearchMovies(searchName).then(res => {\r\n      console.log(res);\r\n      setMovies(res);\r\n    });\r\n    searchName('');\r\n  }, []);\r\n\r\n  const handleNameChange = e => {\r\n    return setSearchName(e.currentTarget.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (searchName.trim() === '') {\r\n      toast.info('Enter query!');\r\n      return;\r\n    }\r\n    apiFilms.SearchMovies(searchName).then(res => setMovies(res));\r\n    setSearchName('');\r\n\r\n    history.push({...location, \r\n      search: `query=${searchName}`})\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search movies\"\r\n          value={searchName}\r\n          onChange={handleNameChange}\r\n        />\r\n        <button type=\"submit\" className=\"Btn\">\r\n          <span>&#128269; Search</span>\r\n        </button>\r\n      </form>\r\n      <ul className=\"List\">\r\n        {movies &&\r\n          movies.map(movie => {\r\n            return (\r\n              <li key={movie.id}>\r\n                <Link to={`${url}/${movie.id}`}>{movie.title}</Link>\r\n              </li>\r\n            );\r\n          })}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}