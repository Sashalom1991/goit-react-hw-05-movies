{"version":3,"sources":["service/apiMovies.js","views/MovieDetailsPage.jsx"],"names":["BASE_URL","KEY","ListPopularMoviesToday","a","axios","get","response","data","results","console","error","SearchMovies","searchName","InfoOfMovie","movieId","SearchActhorsMovies","cast","MoviesReviews","Cast","lazy","Reviews","MovieDetailsPage","useRouteMatch","url","path","state","useLocation","history","useHistory","useParams","useState","movie","setMovie","useEffect","apiFilms","then","type","onClick","goBack","className","src","poster_path","alt","title","vote_average","overview","genres","map","genre","name","to","pathname","backUrl","query","fallback"],"mappings":"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","file":"static/js/movie-details-page.0871fd71.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\nconst KEY = '419631da3183c09322b112e93ebb554b';\r\n\r\n// async function fetchDefaultApiMovies(url = '') {\r\n//   try {\r\n//     const response = await axios.get(url);\r\n//     console.log(response);\r\n//   } catch (error) {\r\n//     console.error(error);\r\n//   }\r\n// }\r\n\r\nexport async function ListPopularMoviesToday() {\r\n  try {\r\n    const response = await axios.get(\r\n      `${BASE_URL}/trending/movie/day?api_key=${KEY}`\r\n    );\r\n    return response.data.results;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nexport async function SearchMovies(searchName) {\r\n  try {\r\n    const response = await axios.get(\r\n      `${BASE_URL}/search/movie?api_key=${KEY}&query=${searchName}&language=en-US&page=1&include_adult=false`,\r\n    );\r\n    return response.data.results;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n\r\n}\r\n\r\nexport async function InfoOfMovie(movieId) {\r\n  try {\r\n    const response = await axios.get(\r\n      `${BASE_URL}/movie/${movieId}?api_key=${KEY}&language=en-US`,\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nexport async function SearchActhorsMovies(movieId) {\r\n  try {\r\n    const response = await axios.get(\r\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}&language=en-US`,\r\n    );\r\n    return response.data.cast;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nexport async function MoviesReviews(movieId) {\r\n  try {\r\n    const response = await axios.get(\r\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`,\r\n    );\r\n    return response.data.results;\r\n    \r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n","import { useParams, useRouteMatch } from 'react-router';\r\nimport { useEffect, useState, Suspense, lazy } from 'react';\r\nimport { Link, Route, useLocation, useHistory } from 'react-router-dom';\r\nimport Loader from 'react-loader-spinner';\r\nimport * as apiFilms from '../service/apiMovies';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n// import Cast from './Cast';\r\n// import Reviews from './Reviews';\r\n\r\n\r\nconst Cast = lazy(() => import('./Cast.jsx') /* webpackChunkName: \"cast\" */);\r\nconst Reviews = lazy(() =>\r\n  import('./Reviews.jsx' /* webpackChunkName: \"reviews\" */),\r\n);\r\n\r\nexport default function MovieDetailsPage() {\r\n  const { url, path } = useRouteMatch();\r\n  const { state } = useLocation();\r\n  const history = useHistory();\r\n  const { movieId } = useParams();\r\n  const [movie, setMovie] = useState(null);\r\n\r\n  useEffect(() => {\r\n    apiFilms.InfoOfMovie(movieId).then(movie => setMovie(movie));\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <div>\r\n      <button type=\"button\" onClick={() => history.goBack()} className=\"Btn\">\r\n        Go back\r\n      </button>\r\n      {movie && (\r\n        <div className=\"Content\">\r\n          <div>\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`}\r\n              alt={movie.title}\r\n            />\r\n          </div>\r\n          <div className=\"ContentDesc\">\r\n            <h2>{movie.title}</h2>\r\n            <p>User Score: {movie.vote_average * 10}%</p>\r\n            <h3>Overview</h3>\r\n            <p>{movie.overview}</p>\r\n            <h4>Genres</h4>\r\n            <p>{movie.genres.map(genre => `${genre.name} `)}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <hr/>\r\n      <div>\r\n        <h4 className=\"Title\">Addictional information</h4>\r\n        <ul className=\"List\">\r\n          <li>\r\n            <Link\r\n              to={{\r\n                pathname: `${url}/cast`,\r\n                state: {\r\n                  backUrl: state?.backUrl || '/',\r\n                  query: state?.query || '',\r\n                },\r\n              }}\r\n              \r\n            >\r\n              Cast\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link\r\n              to={{\r\n                pathname: `${url}/reviews`,\r\n                state: {\r\n                  backUrl: state?.backUrl || '/',\r\n                  query: state?.query || '',\r\n                },\r\n              }}\r\n            >\r\n              Reviews\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <hr />\r\n      <Suspense fallback={<Loader />}>\r\n        <Route path={`${path}/cast`}>\r\n          <Cast />\r\n        </Route>\r\n        <Route path={`${path}/reviews`}>\r\n          <Reviews />\r\n        </Route>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}